name: CreateNewRepo

on:
  workflow_dispatch:
    inputs:
        new_repository_name:
            description: The name of the new DAR repository
            type: string
            required: true
  push:
    branches:
      - ondemand
env:
    GH_TOKEN: ${{ secrets.GH_PAT }}

jobs:
  display-secret:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the codesss
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Check for existing repo
        id: repo-check
        run: |
          ORG=$(echo $GITHUB_REPOSITORY | cut -d'/' -f1)
          REPO_NAME="${{ inputs.new_repository_name }}"
          echo "ORG=$ORG" >> $GITHUB_ENV
          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV

          if ! gh repo view "$ORG/$REPO_NAME" > /dev/null 2>&1; then
            echo "::error::Repository `${{ env.TARGET_REPO }}` doesn't exists. Creating the repository first..."
            echo "repo_present=false" >> $GITHUB_OUTPUT
          fi
          else
            echo "repo_present=true" >> $GITHUB_OUTPUT
            echo "::notice::Found Repository $REPO_NAME. Exiting..."
            exit 1

      - name: Create repo
        run: |
          gh repo create "$ORG/$REPO_NAME" --private
          echo "::notice::Created repository $REPO_NAME"

      - name: Set id for git commit
        run: |
          git config --global user.name "LSCSDE Governance Actions"
          git config --global user.email "lscsde-actions@github.com"

      - name: Initialize and push empty main branch
        run: |
          mkdir new_repo
          cd new_repo 
          git init
          git remote add origin "https://$GH_TOKEN@github.com/$ORG/$REPO_NAME.git"
          git commit --allow-empty -m "Initial empty commit"
          git branch -M main
          git push -u origin main

      - name: Update protect_main.json file
        run: |
          curl -O https://raw.githubusercontent.com/${{ github.repository }}/newbranch2/branch_rules/protect_main.json
          cat protect_main.json | jq '.source = $ORG/$REPO_NAME' > protect_main_insert.json

      - name: Apply rule set for '$REPO_NAME'
        run: |
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/$ORG/$REPO_NAME/rulesets \
            --input protect_main_insert.json