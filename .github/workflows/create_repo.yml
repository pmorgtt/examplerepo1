name: CreateNewRepo

on:
  workflow_dispatch:
    inputs:
        new_repository_name:
            description: The name of the new DAR repository
            type: string
            required: true
  push:
    branches:
      - ondemand
env:
    GH_TOKEN: ${{ secrets.GH_PAT }}

jobs:
  display-secret:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the codesss
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Check for existing repo
        id: repo-check
        run: |
          ORG=$(echo $GITHUB_REPOSITORY | cut -d'/' -f1)
          REPO_FULL_NAME="$ORG/${{ inputs.new_repository_name }}"
          echo "REPO_FULL_NAME=$REPO_FULL_NAME" >> $GITHUB_ENV

          echo "repo_present=true" >> $GITHUB_OUTPUT
          echo "::notice::Found Repository $REPO_FULL_NAME."
          exit 0

      - name: init repo
        run: |
          gh repo create "$REPO_FULL_NAME" --private
          echo "::notice::Created repository `${{ inputs.new_repository_name }}` from template `${{ env.TEMPLATE_REPO }}`"
          # create empty main branch on the new repo

      - name: Initialize and push empty main branch
        run: |
          git init
          git checkout -b main
          git commit --allow-empty -m "Initial empty commit"
          git remote add origin https://github.com/$REPO_FULL_NAME.git
          git push -u origin main

      - name: Set id for git commit
        run: |
          git config --global user.name "LSCSDE Governance Actions"
          git config --global user.email "lscsde-actions@github.com"

      - name: Show branches
        run: |
          gh api repos/$REPO_FULL_NAME/branches --jq '.[].name'