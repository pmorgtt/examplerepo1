name: Access Organization Secrets OnDemand

on:
  workflow_dispatch:
    inputs:
        new_repository_name:
            description: The name of the new DAR repository
            type: string
            required: true
  push:
    branches:
      - ondemand
env:
    GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  display-secret:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      # Step 1: Check out the codesss
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Check for existing repo
        id: repo-check
        run: |
          ORG=$(echo $GITHUB_REPOSITORY | cut -d'/' -f1)

          if ! gh repo view "$ORG/${{ inputs.new_repository_name }}" > /dev/null 2>&1; then
            echo "::error::Repository `${{ inputs.new_repository_name }}` doesn't exists - can't reset. Please create the repository first."
            echo "repo_present=false" >> $GITHUB_OUTPUT
            exit 1
          fi

          echo "repo_present=true" >> $GITHUB_OUTPUT
          echo "::notice::Found Repository ${{ inputs.new_repository_name }}."
          exit 0

      - name: init repo
        run: |
          ORG=$(echo $GITHUB_REPOSITORY | cut -d'/' -f1)
          gh repo create "$ORG/${{ inputs.new_repository_name }}" --private

      - name: Set id for git commit
        run: |
          git config --global user.name "LSCSDE Governance Actions"
          git config --global user.email "lscsde-actions@github.com"

      - name: Show branches
        run: |
          gh api repos/$ORG/${{ inputs.new_repository_name }}/branches --jq '.[].name'